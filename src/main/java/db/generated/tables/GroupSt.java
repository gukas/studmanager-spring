/*
 * This file is generated by jOOQ.
*/
package db.generated.tables;


import db.generated.College;
import db.generated.Keys;
import db.generated.tables.records.GroupStRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupSt extends TableImpl<GroupStRecord> {

    private static final long serialVersionUID = 294329774;

    /**
     * The reference instance of <code>college.group_st</code>
     */
    public static final GroupSt GROUP_ST = new GroupSt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupStRecord> getRecordType() {
        return GroupStRecord.class;
    }

    /**
     * The column <code>college.group_st.id</code>.
     */
    public final TableField<GroupStRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>college.group_st.nomer</code>.
     */
    public final TableField<GroupStRecord, String> NOMER = createField("nomer", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * The column <code>college.group_st.sub_fac_id</code>.
     */
    public final TableField<GroupStRecord, Integer> SUB_FAC_ID = createField("sub_fac_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>college.group_st</code> table reference
     */
    public GroupSt() {
        this("group_st", null);
    }

    /**
     * Create an aliased <code>college.group_st</code> table reference
     */
    public GroupSt(String alias) {
        this(alias, GROUP_ST);
    }

    private GroupSt(String alias, Table<GroupStRecord> aliased) {
        this(alias, aliased, null);
    }

    private GroupSt(String alias, Table<GroupStRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return College.COLLEGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GroupStRecord> getPrimaryKey() {
        return Keys.KEY_GROUP_ST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GroupStRecord>> getKeys() {
        return Arrays.<UniqueKey<GroupStRecord>>asList(Keys.KEY_GROUP_ST_PRIMARY, Keys.KEY_GROUP_ST_NOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GroupStRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GroupStRecord, ?>>asList(Keys.GROUP_ST_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroupSt as(String alias) {
        return new GroupSt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupSt rename(String name) {
        return new GroupSt(name, null);
    }
}
