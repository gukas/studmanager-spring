/*
 * This file is generated by jOOQ.
*/
package db.generated.tables.records;


import db.generated.tables.Relative;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelativeRecord extends UpdatableRecordImpl<RelativeRecord> implements Record8<Integer, String, String, String, String, String, String, Integer> {

    private static final long serialVersionUID = 1759641350;

    /**
     * Setter for <code>college.relative.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>college.relative.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>college.relative.surname</code>.
     */
    public void setSurname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>college.relative.surname</code>.
     */
    public String getSurname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>college.relative.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>college.relative.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>college.relative.rodstvo</code>.
     */
    public void setRodstvo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>college.relative.rodstvo</code>.
     */
    public String getRodstvo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>college.relative.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>college.relative.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>college.relative.work_place</code>.
     */
    public void setWorkPlace(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>college.relative.work_place</code>.
     */
    public String getWorkPlace() {
        return (String) get(5);
    }

    /**
     * Setter for <code>college.relative.job</code>.
     */
    public void setJob(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>college.relative.job</code>.
     */
    public String getJob() {
        return (String) get(6);
    }

    /**
     * Setter for <code>college.relative.stud_id</code>.
     */
    public void setStudId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>college.relative.stud_id</code>.
     */
    public Integer getStudId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, String, String, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, String, String, String, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Relative.RELATIVE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Relative.RELATIVE.SURNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Relative.RELATIVE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Relative.RELATIVE.RODSTVO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Relative.RELATIVE.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Relative.RELATIVE.WORK_PLACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Relative.RELATIVE.JOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Relative.RELATIVE.STUD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSurname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRodstvo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getWorkPlace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getJob();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getStudId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value2(String value) {
        setSurname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value4(String value) {
        setRodstvo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value5(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value6(String value) {
        setWorkPlace(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value7(String value) {
        setJob(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord value8(Integer value) {
        setStudId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelativeRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RelativeRecord
     */
    public RelativeRecord() {
        super(Relative.RELATIVE);
    }

    /**
     * Create a detached, initialised RelativeRecord
     */
    public RelativeRecord(Integer id, String surname, String name, String rodstvo, String address, String workPlace, String job, Integer studId) {
        super(Relative.RELATIVE);

        set(0, id);
        set(1, surname);
        set(2, name);
        set(3, rodstvo);
        set(4, address);
        set(5, workPlace);
        set(6, job);
        set(7, studId);
    }
}
