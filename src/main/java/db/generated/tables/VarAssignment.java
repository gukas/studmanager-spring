/*
 * This file is generated by jOOQ.
*/
package db.generated.tables;


import db.generated.College;
import db.generated.Keys;
import db.generated.tables.records.VarAssignmentRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VarAssignment extends TableImpl<VarAssignmentRecord> {

    private static final long serialVersionUID = -1476463003;

    /**
     * The reference instance of <code>college.var_assignment</code>
     */
    public static final VarAssignment VAR_ASSIGNMENT = new VarAssignment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VarAssignmentRecord> getRecordType() {
        return VarAssignmentRecord.class;
    }

    /**
     * The column <code>college.var_assignment.id</code>.
     */
    public final TableField<VarAssignmentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>college.var_assignment.data_talk</code>.
     */
    public final TableField<VarAssignmentRecord, Date> DATA_TALK = createField("data_talk", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>college.var_assignment.stud_id</code>.
     */
    public final TableField<VarAssignmentRecord, Integer> STUD_ID = createField("stud_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>college.var_assignment.repres_id</code>.
     */
    public final TableField<VarAssignmentRecord, Integer> REPRES_ID = createField("repres_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>college.var_assignment.lect_id</code>.
     */
    public final TableField<VarAssignmentRecord, Integer> LECT_ID = createField("lect_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>college.var_assignment.ent_id</code>.
     */
    public final TableField<VarAssignmentRecord, Integer> ENT_ID = createField("ent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>college.var_assignment</code> table reference
     */
    public VarAssignment() {
        this("var_assignment", null);
    }

    /**
     * Create an aliased <code>college.var_assignment</code> table reference
     */
    public VarAssignment(String alias) {
        this(alias, VAR_ASSIGNMENT);
    }

    private VarAssignment(String alias, Table<VarAssignmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private VarAssignment(String alias, Table<VarAssignmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return College.COLLEGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VarAssignmentRecord> getPrimaryKey() {
        return Keys.KEY_VAR_ASSIGNMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VarAssignmentRecord>> getKeys() {
        return Arrays.<UniqueKey<VarAssignmentRecord>>asList(Keys.KEY_VAR_ASSIGNMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VarAssignmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VarAssignmentRecord, ?>>asList(Keys.VAR_ASSIGNMENT_IBFK_1, Keys.VAR_ASSIGNMENT_IBFK_2, Keys.VAR_ASSIGNMENT_IBFK_3, Keys.VAR_ASSIGNMENT_IBFK_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VarAssignment as(String alias) {
        return new VarAssignment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VarAssignment rename(String name) {
        return new VarAssignment(name, null);
    }
}
